@page "/forgotpassword"
@layout AuthLayout
@inject IJSRuntime js
@inject NavigationManager navigationManager
@inject HttpClient client
@inject CustomAuthStateProvider CustomAuthStateProvider

<div class="StudioManagerBody">
    <div class="k-card" style="width: 80%;
                margin: auto;
                margin-top: 15px;">
        <div class="k-card-header">
            <h1 class="h2 font-weight-normal login-title">
                Forgot Password - Please enter email address
            </h1>
        </div>
        <div class="k-card-body">
            <div class="container">
                <EditForm OnValidSubmit="OnSubmit" Model="forgotPasswordRequest">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <label class="text-danger">@ErrorMessage</label>
                    <div class="form-group">
                        
                        <TelerikTextBox Width="100%" @bind-Value="@forgotPasswordRequest.Email" Id="inputUserName" PlaceHolder="Email" />
                        <ValidationMessage For="@(() => forgotPasswordRequest.Email)" />
                    </div>
                    <TelerikButton Id="btnSubmitLogin" ButtonType="ButtonType.Submit" Class="btn btn-lg btn-primary btn-block">Email me password reset</TelerikButton>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code{
    ForgotPasswordRequest forgotPasswordRequest { get; set; } = new ForgotPasswordRequest();
    string ErrorMessage { get; set; }
    string EditStatus { get; set; }

    async Task OnSubmit()
    {
        ErrorMessage = null;
        try
        {
            forgotPasswordRequest.BaseUrl = navigationManager.BaseUri;

            await CustomAuthStateProvider.ForgotPassword(forgotPasswordRequest);
            navigationManager.NavigateTo("");
        }
        catch (Exception ex)
        {
            ErrorMessage = ex.Message;
        }
    }
}
