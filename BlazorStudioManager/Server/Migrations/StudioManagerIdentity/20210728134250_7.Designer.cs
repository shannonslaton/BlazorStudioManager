// <auto-generated />
using System;
using BlazorStudioManager.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BlazorStudioManager.Server.Migrations.StudioManagerIdentity
{
    [DbContext(typeof(StudioManagerIdentityContext))]
    [Migration("20210728134250_7")]
    partial class _7
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BlazorStudioManager.Shared.IdentityModels.ColorName", b =>
                {
                    b.Property<int>("RecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("EditIndex")
                        .HasColumnType("int");

                    b.Property<bool>("Hidden")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOnDt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.HasKey("RecId");

                    b.ToTable("ColorNames");
                });

            modelBuilder.Entity("BlazorStudioManager.Shared.IdentityModels.DefaultAppointmentType", b =>
                {
                    b.Property<int>("RecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppointmentTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColorString")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecId");

                    b.ToTable("DefaultAppointmentTypes");

                    b.HasData(
                        new
                        {
                            RecId = 1,
                            AppointmentTypeName = "Performance",
                            ColorString = "CornflowerBlue"
                        },
                        new
                        {
                            RecId = 2,
                            AppointmentTypeName = "Rehearsal",
                            ColorString = "Coral"
                        },
                        new
                        {
                            RecId = 3,
                            AppointmentTypeName = "Press",
                            ColorString = "CadetBlue"
                        },
                        new
                        {
                            RecId = 4,
                            AppointmentTypeName = "Audition",
                            ColorString = "DarkOrange"
                        },
                        new
                        {
                            RecId = 5,
                            AppointmentTypeName = "Callback",
                            ColorString = "DeepSkyBlue"
                        },
                        new
                        {
                            RecId = 6,
                            AppointmentTypeName = "Travel",
                            ColorString = "BurlyWood"
                        },
                        new
                        {
                            RecId = 7,
                            AppointmentTypeName = "Housing",
                            ColorString = "AntiqueWhite"
                        },
                        new
                        {
                            RecId = 8,
                            AppointmentTypeName = "Meeting",
                            ColorString = "MediumTurquoise"
                        },
                        new
                        {
                            RecId = 9,
                            AppointmentTypeName = "Coverage",
                            ColorString = "MediumSeaGreen"
                        },
                        new
                        {
                            RecId = 10,
                            AppointmentTypeName = "Costume Fitting",
                            ColorString = "OrangeRed"
                        },
                        new
                        {
                            RecId = 11,
                            AppointmentTypeName = "Haircut",
                            ColorString = "OrangeRed"
                        });
                });

            modelBuilder.Entity("BlazorStudioManager.Shared.IdentityModels.Discipline", b =>
                {
                    b.Property<int>("RecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("DisciplineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisciplineNameShort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EditIndex")
                        .HasColumnType("int");

                    b.Property<bool>("Hidden")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOnDt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.HasKey("RecId");

                    b.ToTable("Disciplines");

                    b.HasData(
                        new
                        {
                            RecId = 1,
                            CreatedOn = new DateTime(2021, 7, 28, 13, 42, 49, 479, DateTimeKind.Utc).AddTicks(4147),
                            Deleted = false,
                            DisciplineName = "Actor",
                            DisciplineNameShort = "Actor",
                            EditIndex = 0,
                            Hidden = false,
                            LastModifiedOnDt = new DateTime(2021, 7, 28, 13, 42, 49, 479, DateTimeKind.Utc).AddTicks(4142),
                            Updated = true
                        },
                        new
                        {
                            RecId = 2,
                            CreatedOn = new DateTime(2021, 7, 28, 13, 42, 49, 479, DateTimeKind.Utc).AddTicks(5258),
                            Deleted = false,
                            DisciplineName = "Sound",
                            DisciplineNameShort = "Sound",
                            EditIndex = 0,
                            Hidden = false,
                            LastModifiedOnDt = new DateTime(2021, 7, 28, 13, 42, 49, 479, DateTimeKind.Utc).AddTicks(5256),
                            Updated = true
                        },
                        new
                        {
                            RecId = 3,
                            CreatedOn = new DateTime(2021, 7, 28, 13, 42, 49, 479, DateTimeKind.Utc).AddTicks(5261),
                            Deleted = false,
                            DisciplineName = "Lighting",
                            DisciplineNameShort = "Lighting",
                            EditIndex = 0,
                            Hidden = false,
                            LastModifiedOnDt = new DateTime(2021, 7, 28, 13, 42, 49, 479, DateTimeKind.Utc).AddTicks(5261),
                            Updated = true
                        },
                        new
                        {
                            RecId = 4,
                            CreatedOn = new DateTime(2021, 7, 28, 13, 42, 49, 479, DateTimeKind.Utc).AddTicks(5263),
                            Deleted = false,
                            DisciplineName = "Props",
                            DisciplineNameShort = "Props",
                            EditIndex = 0,
                            Hidden = false,
                            LastModifiedOnDt = new DateTime(2021, 7, 28, 13, 42, 49, 479, DateTimeKind.Utc).AddTicks(5262),
                            Updated = true
                        },
                        new
                        {
                            RecId = 5,
                            CreatedOn = new DateTime(2021, 7, 28, 13, 42, 49, 479, DateTimeKind.Utc).AddTicks(5264),
                            Deleted = false,
                            DisciplineName = "Choreography",
                            DisciplineNameShort = "Choreography",
                            EditIndex = 0,
                            Hidden = false,
                            LastModifiedOnDt = new DateTime(2021, 7, 28, 13, 42, 49, 479, DateTimeKind.Utc).AddTicks(5264),
                            Updated = true
                        },
                        new
                        {
                            RecId = 6,
                            CreatedOn = new DateTime(2021, 7, 28, 13, 42, 49, 479, DateTimeKind.Utc).AddTicks(5266),
                            Deleted = false,
                            DisciplineName = "Stage Management",
                            DisciplineNameShort = "Stage Management",
                            EditIndex = 0,
                            Hidden = false,
                            LastModifiedOnDt = new DateTime(2021, 7, 28, 13, 42, 49, 479, DateTimeKind.Utc).AddTicks(5265),
                            Updated = true
                        },
                        new
                        {
                            RecId = 7,
                            CreatedOn = new DateTime(2021, 7, 28, 13, 42, 49, 479, DateTimeKind.Utc).AddTicks(5268),
                            Deleted = false,
                            DisciplineName = "Wardrobe",
                            DisciplineNameShort = "Wardrobe",
                            EditIndex = 0,
                            Hidden = false,
                            LastModifiedOnDt = new DateTime(2021, 7, 28, 13, 42, 49, 479, DateTimeKind.Utc).AddTicks(5267),
                            Updated = true
                        },
                        new
                        {
                            RecId = 8,
                            CreatedOn = new DateTime(2021, 7, 28, 13, 42, 49, 479, DateTimeKind.Utc).AddTicks(5269),
                            Deleted = false,
                            DisciplineName = "Hair",
                            DisciplineNameShort = "Hair",
                            EditIndex = 0,
                            Hidden = false,
                            LastModifiedOnDt = new DateTime(2021, 7, 28, 13, 42, 49, 479, DateTimeKind.Utc).AddTicks(5269),
                            Updated = true
                        },
                        new
                        {
                            RecId = 9,
                            CreatedOn = new DateTime(2021, 7, 28, 13, 42, 49, 479, DateTimeKind.Utc).AddTicks(5271),
                            Deleted = false,
                            DisciplineName = "Company Management",
                            DisciplineNameShort = "Company Management",
                            EditIndex = 0,
                            Hidden = false,
                            LastModifiedOnDt = new DateTime(2021, 7, 28, 13, 42, 49, 479, DateTimeKind.Utc).AddTicks(5270),
                            Updated = true
                        },
                        new
                        {
                            RecId = 10,
                            CreatedOn = new DateTime(2021, 7, 28, 13, 42, 49, 479, DateTimeKind.Utc).AddTicks(5273),
                            Deleted = false,
                            DisciplineName = "General Management",
                            DisciplineNameShort = "General Management",
                            EditIndex = 0,
                            Hidden = false,
                            LastModifiedOnDt = new DateTime(2021, 7, 28, 13, 42, 49, 479, DateTimeKind.Utc).AddTicks(5272),
                            Updated = true
                        },
                        new
                        {
                            RecId = 11,
                            CreatedOn = new DateTime(2021, 7, 28, 13, 42, 49, 479, DateTimeKind.Utc).AddTicks(5274),
                            Deleted = false,
                            DisciplineName = "Marketing",
                            DisciplineNameShort = "Marketing",
                            EditIndex = 0,
                            Hidden = false,
                            LastModifiedOnDt = new DateTime(2021, 7, 28, 13, 42, 49, 479, DateTimeKind.Utc).AddTicks(5274),
                            Updated = true
                        },
                        new
                        {
                            RecId = 12,
                            CreatedOn = new DateTime(2021, 7, 28, 13, 42, 49, 479, DateTimeKind.Utc).AddTicks(5276),
                            Deleted = false,
                            DisciplineName = "Directing",
                            DisciplineNameShort = "Directing",
                            EditIndex = 0,
                            Hidden = false,
                            LastModifiedOnDt = new DateTime(2021, 7, 28, 13, 42, 49, 479, DateTimeKind.Utc).AddTicks(5276),
                            Updated = true
                        },
                        new
                        {
                            RecId = 13,
                            CreatedOn = new DateTime(2021, 7, 28, 13, 42, 49, 479, DateTimeKind.Utc).AddTicks(5278),
                            Deleted = false,
                            DisciplineName = "Musician",
                            DisciplineNameShort = "Musician",
                            EditIndex = 0,
                            Hidden = false,
                            LastModifiedOnDt = new DateTime(2021, 7, 28, 13, 42, 49, 479, DateTimeKind.Utc).AddTicks(5277),
                            Updated = true
                        },
                        new
                        {
                            RecId = 14,
                            CreatedOn = new DateTime(2021, 7, 28, 13, 42, 49, 479, DateTimeKind.Utc).AddTicks(5279),
                            Deleted = false,
                            DisciplineName = "Scenic",
                            DisciplineNameShort = "Scenic",
                            EditIndex = 0,
                            Hidden = false,
                            LastModifiedOnDt = new DateTime(2021, 7, 28, 13, 42, 49, 479, DateTimeKind.Utc).AddTicks(5279),
                            Updated = true
                        },
                        new
                        {
                            RecId = 15,
                            CreatedOn = new DateTime(2021, 7, 28, 13, 42, 49, 479, DateTimeKind.Utc).AddTicks(5281),
                            Deleted = false,
                            DisciplineName = "Projections",
                            DisciplineNameShort = "Projections",
                            EditIndex = 0,
                            Hidden = false,
                            LastModifiedOnDt = new DateTime(2021, 7, 28, 13, 42, 49, 479, DateTimeKind.Utc).AddTicks(5280),
                            Updated = true
                        },
                        new
                        {
                            RecId = 16,
                            CreatedOn = new DateTime(2021, 7, 28, 13, 42, 49, 479, DateTimeKind.Utc).AddTicks(5283),
                            Deleted = false,
                            DisciplineName = "House Management",
                            DisciplineNameShort = "House Management",
                            EditIndex = 0,
                            Hidden = false,
                            LastModifiedOnDt = new DateTime(2021, 7, 28, 13, 42, 49, 479, DateTimeKind.Utc).AddTicks(5283),
                            Updated = true
                        },
                        new
                        {
                            RecId = 17,
                            CreatedOn = new DateTime(2021, 7, 28, 13, 42, 49, 479, DateTimeKind.Utc).AddTicks(5285),
                            Deleted = false,
                            DisciplineName = "Make Up",
                            DisciplineNameShort = "Make Up",
                            EditIndex = 0,
                            Hidden = false,
                            LastModifiedOnDt = new DateTime(2021, 7, 28, 13, 42, 49, 479, DateTimeKind.Utc).AddTicks(5284),
                            Updated = true
                        },
                        new
                        {
                            RecId = 18,
                            CreatedOn = new DateTime(2021, 7, 28, 13, 42, 49, 479, DateTimeKind.Utc).AddTicks(5286),
                            Deleted = false,
                            DisciplineName = "Production Management",
                            DisciplineNameShort = "Production Management",
                            EditIndex = 0,
                            Hidden = false,
                            LastModifiedOnDt = new DateTime(2021, 7, 28, 13, 42, 49, 479, DateTimeKind.Utc).AddTicks(5286),
                            Updated = true
                        });
                });

            modelBuilder.Entity("BlazorStudioManager.Shared.IdentityModels.DisciplineColor", b =>
                {
                    b.Property<int>("RecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ColorString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisciplineId")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOnDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("StudioManagerUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("Updated")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecId");

                    b.HasIndex("StudioManagerUserId");

                    b.ToTable("DisciplineColors");
                });

            modelBuilder.Entity("BlazorStudioManager.Shared.IdentityModels.DisciplineColorDefault", b =>
                {
                    b.Property<int>("RecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ColorString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisciplineId")
                        .HasColumnType("int");

                    b.HasKey("RecId");

                    b.ToTable("DisciplineColorDefaults");

                    b.HasData(
                        new
                        {
                            RecId = 1,
                            ColorString = "#FF00FFFF",
                            DisciplineId = 1
                        },
                        new
                        {
                            RecId = 2,
                            ColorString = "#FF00FFFF",
                            DisciplineId = 2
                        },
                        new
                        {
                            RecId = 3,
                            ColorString = "#FF00FFFF",
                            DisciplineId = 3
                        },
                        new
                        {
                            RecId = 4,
                            ColorString = "#FF00FFFF",
                            DisciplineId = 4
                        },
                        new
                        {
                            RecId = 5,
                            ColorString = "#FF00FFFF",
                            DisciplineId = 5
                        },
                        new
                        {
                            RecId = 6,
                            ColorString = "#FF00FFFF",
                            DisciplineId = 6
                        },
                        new
                        {
                            RecId = 7,
                            ColorString = "#FF00FFFF",
                            DisciplineId = 7
                        },
                        new
                        {
                            RecId = 8,
                            ColorString = "#FF00FFFF",
                            DisciplineId = 8
                        },
                        new
                        {
                            RecId = 9,
                            ColorString = "#FF00FFFF",
                            DisciplineId = 9
                        },
                        new
                        {
                            RecId = 10,
                            ColorString = "#FF00FFFF",
                            DisciplineId = 10
                        },
                        new
                        {
                            RecId = 11,
                            ColorString = "#FF00FFFF",
                            DisciplineId = 11
                        },
                        new
                        {
                            RecId = 12,
                            ColorString = "#FF00FFFF",
                            DisciplineId = 12
                        },
                        new
                        {
                            RecId = 13,
                            ColorString = "#FF00FFFF",
                            DisciplineId = 13
                        },
                        new
                        {
                            RecId = 14,
                            ColorString = "#FF00FFFF",
                            DisciplineId = 14
                        },
                        new
                        {
                            RecId = 15,
                            ColorString = "#FF00FFFF",
                            DisciplineId = 15
                        },
                        new
                        {
                            RecId = 16,
                            ColorString = "#FF00FFFF",
                            DisciplineId = 16
                        },
                        new
                        {
                            RecId = 17,
                            ColorString = "#FF00FFFF",
                            DisciplineId = 17
                        },
                        new
                        {
                            RecId = 18,
                            ColorString = "#FF00FFFF",
                            DisciplineId = 18
                        });
                });

            modelBuilder.Entity("BlazorStudioManager.Shared.IdentityModels.DisciplineMerge", b =>
                {
                    b.Property<int>("RecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("DisciplineId")
                        .HasColumnType("int");

                    b.Property<int>("EditIndex")
                        .HasColumnType("int");

                    b.Property<bool>("Hidden")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastMergedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOnDt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecId");

                    b.ToTable("DisciplineMerges");
                });

            modelBuilder.Entity("BlazorStudioManager.Shared.IdentityModels.DropDownOptionDefault", b =>
                {
                    b.Property<int>("RecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DdoAbrv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DdoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DdoType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DefaultCompanyMemberDepartmentId")
                        .HasColumnType("int");

                    b.Property<int?>("DefaultDisciplineId")
                        .HasColumnType("int");

                    b.Property<int?>("DefaultProductionDisciplineId")
                        .HasColumnType("int");

                    b.HasKey("RecId");

                    b.ToTable("DropDownOptionDefaults");

                    b.HasData(
                        new
                        {
                            RecId = 1,
                            DdoTitle = "Lead",
                            DdoType = "ActorType"
                        },
                        new
                        {
                            RecId = 2,
                            DdoTitle = "Ensemble",
                            DdoType = "ActorType"
                        },
                        new
                        {
                            RecId = 3,
                            DdoTitle = "Investment",
                            DdoType = "BudgetLineItemType"
                        },
                        new
                        {
                            RecId = 4,
                            DdoTitle = "Invoice",
                            DdoType = "BudgetLineItemType"
                        },
                        new
                        {
                            RecId = 5,
                            DdoTitle = "Pay",
                            DdoType = "BudgetLineItemType"
                        },
                        new
                        {
                            RecId = 6,
                            DdoTitle = "Cast",
                            DdoType = "CompanyMemberDepartment"
                        },
                        new
                        {
                            RecId = 7,
                            DdoTitle = "Creatives",
                            DdoType = "CompanyMemberDepartment"
                        },
                        new
                        {
                            RecId = 8,
                            DdoTitle = "Musicians",
                            DdoType = "CompanyMemberDepartment"
                        },
                        new
                        {
                            RecId = 9,
                            DdoTitle = "Crew",
                            DdoType = "CompanyMemberDepartment"
                        },
                        new
                        {
                            RecId = 10,
                            DdoTitle = "Management",
                            DdoType = "CompanyMemberDepartment"
                        },
                        new
                        {
                            RecId = 11,
                            DdoTitle = "Lighting Designer",
                            DdoType = "CompanyMemberTitle",
                            DefaultDisciplineId = 3,
                            DefaultProductionDisciplineId = 3
                        },
                        new
                        {
                            RecId = 12,
                            DdoTitle = "Associate Lighting Designer",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 3
                        },
                        new
                        {
                            RecId = 13,
                            DdoTitle = "Assistant Lighting Designer",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 3
                        },
                        new
                        {
                            RecId = 14,
                            DdoTitle = "Moving Light Programmer",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 3
                        },
                        new
                        {
                            RecId = 15,
                            DdoTitle = "Light Board Operator",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 3
                        },
                        new
                        {
                            RecId = 16,
                            DdoTitle = "Deck Electrician",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 3
                        },
                        new
                        {
                            RecId = 17,
                            DdoTitle = "Spot Operator",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 3
                        },
                        new
                        {
                            RecId = 18,
                            DdoTitle = "Lighting Intern",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 3
                        },
                        new
                        {
                            RecId = 19,
                            DdoTitle = "Production Lighting",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 3
                        },
                        new
                        {
                            RecId = 20,
                            DdoTitle = "Sound Designer",
                            DdoType = "CompanyMemberTitle",
                            DefaultDisciplineId = 2,
                            DefaultProductionDisciplineId = 2
                        },
                        new
                        {
                            RecId = 21,
                            DdoTitle = "Associate Sound Designer",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 2
                        },
                        new
                        {
                            RecId = 22,
                            DdoTitle = "Assistant Sound Designer",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 2
                        },
                        new
                        {
                            RecId = 23,
                            DdoTitle = "Qlab Programmer",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 2
                        },
                        new
                        {
                            RecId = 24,
                            DdoTitle = "Sound Intern",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 2
                        },
                        new
                        {
                            RecId = 25,
                            DdoTitle = "Sound Board Operator",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 2
                        },
                        new
                        {
                            RecId = 26,
                            DdoTitle = "Deck Sound",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 2
                        },
                        new
                        {
                            RecId = 27,
                            DdoTitle = "RF Tech",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 2
                        },
                        new
                        {
                            RecId = 28,
                            DdoTitle = "Production Sound",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 2
                        },
                        new
                        {
                            RecId = 29,
                            DdoTitle = "Scenic Designer",
                            DdoType = "CompanyMemberTitle",
                            DefaultDisciplineId = 14,
                            DefaultProductionDisciplineId = 14
                        },
                        new
                        {
                            RecId = 30,
                            DdoTitle = "Associate Scenic Designer",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 14
                        },
                        new
                        {
                            RecId = 31,
                            DdoTitle = "Assistant Scenic Designer",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 14
                        },
                        new
                        {
                            RecId = 32,
                            DdoTitle = "Scenic Intern",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 14
                        },
                        new
                        {
                            RecId = 33,
                            DdoTitle = "Scenic Draftsman",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 14
                        },
                        new
                        {
                            RecId = 34,
                            DdoTitle = "Head Electrician",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 3
                        },
                        new
                        {
                            RecId = 35,
                            DdoTitle = "Head Sound",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 2
                        },
                        new
                        {
                            RecId = 36,
                            DdoTitle = "Head Carpenter",
                            DdoType = "CompanyMemberTitle",
                            DefaultDisciplineId = 14
                        },
                        new
                        {
                            RecId = 37,
                            DdoTitle = "Head Props",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 4
                        },
                        new
                        {
                            RecId = 38,
                            DdoTitle = "Head Wardrobe",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 7
                        },
                        new
                        {
                            RecId = 39,
                            DdoTitle = "Head Hair",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 8
                        },
                        new
                        {
                            RecId = 40,
                            DdoTitle = "Carpenter",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 14
                        },
                        new
                        {
                            RecId = 41,
                            DdoTitle = "Deck Carpenter",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 14
                        },
                        new
                        {
                            RecId = 42,
                            DdoTitle = "Flyman",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 14
                        },
                        new
                        {
                            RecId = 43,
                            DdoTitle = "Automation Operator",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 14
                        },
                        new
                        {
                            RecId = 44,
                            DdoTitle = "Automation",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 14
                        },
                        new
                        {
                            RecId = 45,
                            DdoTitle = "Prop Designer",
                            DdoType = "CompanyMemberTitle",
                            DefaultDisciplineId = 4,
                            DefaultProductionDisciplineId = 4
                        },
                        new
                        {
                            RecId = 46,
                            DdoTitle = "Associate Prop Designer",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 4
                        },
                        new
                        {
                            RecId = 47,
                            DdoTitle = "Assistant Prop Designer",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 4
                        },
                        new
                        {
                            RecId = 48,
                            DdoTitle = "Prop Design Intern",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 4
                        },
                        new
                        {
                            RecId = 49,
                            DdoTitle = "Props",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 4
                        },
                        new
                        {
                            RecId = 50,
                            DdoTitle = "Costume Designer",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 7
                        },
                        new
                        {
                            RecId = 51,
                            DdoTitle = "Associate Costume Designer",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 7
                        },
                        new
                        {
                            RecId = 52,
                            DdoTitle = "Assistant Costume Designer",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 7
                        },
                        new
                        {
                            RecId = 53,
                            DdoTitle = "Costume Design Intern",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 7
                        },
                        new
                        {
                            RecId = 54,
                            DdoTitle = "Wardrobe",
                            DdoType = "CompanyMemberTitle",
                            DefaultDisciplineId = 7,
                            DefaultProductionDisciplineId = 7
                        },
                        new
                        {
                            RecId = 55,
                            DdoTitle = "Dresser",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 7
                        },
                        new
                        {
                            RecId = 56,
                            DdoTitle = "Stitcher",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 7
                        },
                        new
                        {
                            RecId = 57,
                            DdoTitle = "Costume Pattern Maker",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 7
                        },
                        new
                        {
                            RecId = 58,
                            DdoTitle = "Hair Designer",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 8
                        },
                        new
                        {
                            RecId = 59,
                            DdoTitle = "Associate Hair Designer",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 8
                        },
                        new
                        {
                            RecId = 60,
                            DdoTitle = "Assistant Hair Designer",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 8
                        },
                        new
                        {
                            RecId = 61,
                            DdoTitle = "Hair Design Intern",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 8
                        },
                        new
                        {
                            RecId = 62,
                            DdoTitle = "Hair",
                            DdoType = "CompanyMemberTitle",
                            DefaultDisciplineId = 8,
                            DefaultProductionDisciplineId = 8
                        },
                        new
                        {
                            RecId = 63,
                            DdoTitle = "Make-up Designer",
                            DdoType = "CompanyMemberTitle",
                            DefaultDisciplineId = 17,
                            DefaultProductionDisciplineId = 17
                        },
                        new
                        {
                            RecId = 64,
                            DdoTitle = "Associate Make-up Designer",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 17
                        },
                        new
                        {
                            RecId = 65,
                            DdoTitle = "Assistant Make-up Designer",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 17
                        },
                        new
                        {
                            RecId = 66,
                            DdoTitle = "Make-up Design Intern",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 17
                        },
                        new
                        {
                            RecId = 67,
                            DdoTitle = "Make-up",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 17
                        },
                        new
                        {
                            RecId = 68,
                            DdoTitle = "Company Manager",
                            DdoType = "CompanyMemberTitle",
                            DefaultDisciplineId = 9,
                            DefaultProductionDisciplineId = 9
                        },
                        new
                        {
                            RecId = 69,
                            DdoTitle = "Associate Company Manager",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 9
                        },
                        new
                        {
                            RecId = 70,
                            DdoTitle = "Assistant Company Manager",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 9
                        },
                        new
                        {
                            RecId = 71,
                            DdoTitle = "Company Manager Intern",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 9
                        },
                        new
                        {
                            RecId = 72,
                            DdoTitle = "General Manager",
                            DdoType = "CompanyMemberTitle",
                            DefaultDisciplineId = 10,
                            DefaultProductionDisciplineId = 10
                        },
                        new
                        {
                            RecId = 73,
                            DdoTitle = "Associate General Manager",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 10
                        },
                        new
                        {
                            RecId = 74,
                            DdoTitle = "Assistant General Manager",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 10
                        },
                        new
                        {
                            RecId = 75,
                            DdoTitle = "General Manager Intern",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 10
                        },
                        new
                        {
                            RecId = 76,
                            DdoTitle = "Production Manager",
                            DdoType = "CompanyMemberTitle",
                            DefaultDisciplineId = 18,
                            DefaultProductionDisciplineId = 18
                        },
                        new
                        {
                            RecId = 77,
                            DdoTitle = "Associate Production Manager",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 18
                        },
                        new
                        {
                            RecId = 78,
                            DdoTitle = "Associate Production Manager",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 18
                        },
                        new
                        {
                            RecId = 79,
                            DdoTitle = "Production Manager Intern",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 18
                        },
                        new
                        {
                            RecId = 80,
                            DdoTitle = "Production Stage Manager",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 6
                        },
                        new
                        {
                            RecId = 81,
                            DdoTitle = "Deck Stage Manager",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 6
                        },
                        new
                        {
                            RecId = 82,
                            DdoTitle = "Stage Manager",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 6
                        },
                        new
                        {
                            RecId = 83,
                            DdoTitle = "Stage Manager Intern",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 6
                        },
                        new
                        {
                            RecId = 84,
                            DdoTitle = "Assistant Stage Manager",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 6
                        },
                        new
                        {
                            RecId = 85,
                            DdoTitle = "Projection Designer",
                            DdoType = "CompanyMemberTitle",
                            DefaultDisciplineId = 15,
                            DefaultProductionDisciplineId = 15
                        },
                        new
                        {
                            RecId = 86,
                            DdoTitle = "Associate Projection Designer",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 15
                        },
                        new
                        {
                            RecId = 87,
                            DdoTitle = "Assistant Projection Designer",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 15
                        },
                        new
                        {
                            RecId = 88,
                            DdoTitle = "Projection Design Intern",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 15
                        },
                        new
                        {
                            RecId = 89,
                            DdoTitle = "Projection Operator",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 15
                        },
                        new
                        {
                            RecId = 90,
                            DdoTitle = "Video",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 15
                        },
                        new
                        {
                            RecId = 91,
                            DdoTitle = "House Manager",
                            DdoType = "CompanyMemberTitle",
                            DefaultDisciplineId = 16,
                            DefaultProductionDisciplineId = 16
                        },
                        new
                        {
                            RecId = 92,
                            DdoTitle = "Assistant House Manager",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 16
                        },
                        new
                        {
                            RecId = 93,
                            DdoTitle = "Box Office Manager",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 16
                        },
                        new
                        {
                            RecId = 94,
                            DdoTitle = "Assistant Box Office Manager",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 16
                        },
                        new
                        {
                            RecId = 95,
                            DdoTitle = "Usher",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 16
                        },
                        new
                        {
                            RecId = 96,
                            DdoTitle = "Height",
                            DdoType = "ContactSpecTypePerson"
                        },
                        new
                        {
                            RecId = 97,
                            DdoTitle = "Weight",
                            DdoType = "ContactSpecTypePerson"
                        },
                        new
                        {
                            RecId = 98,
                            DdoTitle = "Proscenium Height",
                            DdoType = "ContactSpecTypeVenue"
                        },
                        new
                        {
                            RecId = 99,
                            DdoTitle = "Proscenium Width",
                            DdoType = "ContactSpecTypeVenue"
                        },
                        new
                        {
                            RecId = 100,
                            DdoTitle = "Proscenium Width",
                            DdoType = "ContactSpecTypeVenue"
                        },
                        new
                        {
                            RecId = 101,
                            DdoTitle = "Male",
                            DdoType = "GenderOption"
                        },
                        new
                        {
                            RecId = 102,
                            DdoTitle = "Female",
                            DdoType = "GenderOption"
                        },
                        new
                        {
                            RecId = 103,
                            DdoTitle = "Cis",
                            DdoType = "GenderOption"
                        },
                        new
                        {
                            RecId = 104,
                            DdoTitle = "Gender Fluid",
                            DdoType = "GenderOption"
                        },
                        new
                        {
                            RecId = 105,
                            DdoTitle = "Cis Male",
                            DdoType = "GenderOption"
                        },
                        new
                        {
                            RecId = 106,
                            DdoTitle = "Cis Female",
                            DdoType = "GenderOption"
                        },
                        new
                        {
                            RecId = 107,
                            DdoTitle = "Bigender",
                            DdoType = "GenderOption"
                        },
                        new
                        {
                            RecId = 108,
                            DdoTitle = "Intersex",
                            DdoType = "GenderOption"
                        },
                        new
                        {
                            RecId = 109,
                            DdoTitle = "Non-binary",
                            DdoType = "GenderOption"
                        },
                        new
                        {
                            RecId = 110,
                            DdoTitle = "Other",
                            DdoType = "GenderOption"
                        },
                        new
                        {
                            RecId = 111,
                            DdoTitle = "Trans",
                            DdoType = "GenderOption"
                        },
                        new
                        {
                            RecId = 112,
                            DdoTitle = "Transgender",
                            DdoType = "GenderOption"
                        },
                        new
                        {
                            RecId = 113,
                            DdoTitle = "Transsexual",
                            DdoType = "GenderOption"
                        },
                        new
                        {
                            RecId = 114,
                            DdoTitle = "He/Him",
                            DdoType = "PreferredPronoun"
                        },
                        new
                        {
                            RecId = 115,
                            DdoTitle = "She/Her",
                            DdoType = "PreferredPronoun"
                        },
                        new
                        {
                            RecId = 116,
                            DdoTitle = "They/Them",
                            DdoType = "PreferredPronoun"
                        },
                        new
                        {
                            RecId = 117,
                            DdoTitle = "Main",
                            DdoType = "PerformerHierarchy"
                        },
                        new
                        {
                            RecId = 118,
                            DdoTitle = "First Cover",
                            DdoType = "PerformerHierarchy"
                        },
                        new
                        {
                            RecId = 119,
                            DdoTitle = "Second Cover",
                            DdoType = "PerformerHierarchy"
                        },
                        new
                        {
                            RecId = 120,
                            DdoTitle = "Third Cover",
                            DdoType = "PerformerHierarchy"
                        },
                        new
                        {
                            RecId = 121,
                            DdoTitle = "Split Track",
                            DdoType = "PerformerHierarchy"
                        },
                        new
                        {
                            RecId = 122,
                            DdoTitle = "Archive",
                            DdoType = "PerformerHierarchy"
                        },
                        new
                        {
                            RecId = 123,
                            DdoTitle = "Marketing Manager",
                            DdoType = "CompanyMemberTitle",
                            DefaultDisciplineId = 11,
                            DefaultProductionDisciplineId = 11
                        },
                        new
                        {
                            RecId = 124,
                            DdoTitle = "Director",
                            DdoType = "CompanyMemberTitle",
                            DefaultDisciplineId = 12,
                            DefaultProductionDisciplineId = 12
                        },
                        new
                        {
                            RecId = 125,
                            DdoTitle = "Musician",
                            DdoType = "CompanyMemberTitle",
                            DefaultDisciplineId = 13,
                            DefaultProductionDisciplineId = 13
                        },
                        new
                        {
                            RecId = 128,
                            DdoTitle = "Actor",
                            DdoType = "CompanyMemberTitle",
                            DefaultDisciplineId = 1,
                            DefaultProductionDisciplineId = 1
                        },
                        new
                        {
                            RecId = 129,
                            DdoTitle = "Small",
                            DdoType = "LabelType"
                        },
                        new
                        {
                            RecId = 130,
                            DdoTitle = "Large",
                            DdoType = "LabelType"
                        },
                        new
                        {
                            RecId = 131,
                            DdoTitle = "Both",
                            DdoType = "LabelType"
                        },
                        new
                        {
                            RecId = 132,
                            DdoTitle = "Imperial",
                            DdoType = "MeasurementType"
                        },
                        new
                        {
                            RecId = 133,
                            DdoTitle = "Metric",
                            DdoType = "MeasurementType"
                        },
                        new
                        {
                            RecId = 134,
                            DdoTitle = "Green",
                            DdoType = "CueLightColor"
                        },
                        new
                        {
                            RecId = 135,
                            DdoTitle = "Blue",
                            DdoType = "CueLightColor"
                        },
                        new
                        {
                            RecId = 136,
                            DdoTitle = "Red",
                            DdoType = "CueLightColor"
                        },
                        new
                        {
                            RecId = 137,
                            DdoTitle = "Yellow",
                            DdoType = "CueLightColor"
                        },
                        new
                        {
                            RecId = 138,
                            DdoTitle = "USA",
                            DdoType = "CountryOfOrigin"
                        },
                        new
                        {
                            RecId = 139,
                            DdoTitle = "Canada",
                            DdoType = "CountryOfOrigin"
                        },
                        new
                        {
                            RecId = 140,
                            DdoTitle = "Mexico",
                            DdoType = "CountryOfOrigin"
                        },
                        new
                        {
                            RecId = 141,
                            DdoTitle = "China",
                            DdoType = "CountryOfOrigin"
                        },
                        new
                        {
                            RecId = 142,
                            DdoTitle = "Russia",
                            DdoType = "CountryOfOrigin"
                        },
                        new
                        {
                            RecId = 143,
                            DdoTitle = "Finland",
                            DdoType = "CountryOfOrigin"
                        },
                        new
                        {
                            RecId = 144,
                            DdoTitle = "Sweden",
                            DdoType = "CountryOfOrigin"
                        },
                        new
                        {
                            RecId = 145,
                            DdoTitle = "Ireland",
                            DdoType = "CountryOfOrigin"
                        },
                        new
                        {
                            RecId = 146,
                            DdoTitle = "England",
                            DdoType = "CountryOfOrigin"
                        },
                        new
                        {
                            RecId = 147,
                            DdoTitle = "Russia",
                            DdoType = "CountryOfOrigin"
                        },
                        new
                        {
                            RecId = 148,
                            DdoTitle = "Italy",
                            DdoType = "CountryOfOrigin"
                        },
                        new
                        {
                            RecId = 149,
                            DdoTitle = "Germany",
                            DdoType = "CountryOfOrigin"
                        },
                        new
                        {
                            RecId = 150,
                            DdoTitle = "Brazil",
                            DdoType = "CountryOfOrigin"
                        },
                        new
                        {
                            RecId = 151,
                            DdoTitle = "Peru",
                            DdoType = "CountryOfOrigin"
                        },
                        new
                        {
                            RecId = 152,
                            DdoTitle = "Argentina",
                            DdoType = "CountryOfOrigin"
                        },
                        new
                        {
                            RecId = 153,
                            DdoTitle = "Austria",
                            DdoType = "CountryOfOrigin"
                        },
                        new
                        {
                            RecId = 154,
                            DdoTitle = "Spain",
                            DdoType = "CountryOfOrigin"
                        },
                        new
                        {
                            RecId = 155,
                            DdoTitle = "Lithuania",
                            DdoType = "CountryOfOrigin"
                        },
                        new
                        {
                            RecId = 156,
                            DdoTitle = "Poland",
                            DdoType = "CountryOfOrigin"
                        },
                        new
                        {
                            RecId = 157,
                            DdoTitle = "Choreographer",
                            DdoType = "CompanyMemberTitle",
                            DefaultDisciplineId = 5,
                            DefaultProductionDisciplineId = 5
                        },
                        new
                        {
                            RecId = 158,
                            DdoTitle = "Associate Choreographer",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 5
                        },
                        new
                        {
                            RecId = 159,
                            DdoTitle = "Assistant Choreographer",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 5
                        },
                        new
                        {
                            RecId = 160,
                            DdoTitle = "Intern Choreographer",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 5
                        },
                        new
                        {
                            RecId = 161,
                            DdoTitle = "Dance Captain",
                            DdoType = "CompanyMemberTitle",
                            DefaultProductionDisciplineId = 5
                        },
                        new
                        {
                            RecId = 162,
                            DdoTitle = "Matinee",
                            DdoType = "Performance"
                        },
                        new
                        {
                            RecId = 163,
                            DdoTitle = "Evening",
                            DdoType = "Performance"
                        },
                        new
                        {
                            RecId = 164,
                            DdoTitle = "First Preview",
                            DdoType = "Performance"
                        },
                        new
                        {
                            RecId = 165,
                            DdoTitle = "Preview Evening",
                            DdoType = "Performance"
                        },
                        new
                        {
                            RecId = 166,
                            DdoTitle = "Preview Matinee",
                            DdoType = "Performance"
                        },
                        new
                        {
                            RecId = 167,
                            DdoTitle = "Preview",
                            DdoType = "Performance"
                        },
                        new
                        {
                            RecId = 168,
                            DdoTitle = "Closing",
                            DdoType = "Performance"
                        },
                        new
                        {
                            RecId = 169,
                            DdoTitle = "Invited Dress",
                            DdoType = "Performance"
                        },
                        new
                        {
                            RecId = 170,
                            DdoTitle = "Hotel",
                            DdoType = "Accommodations"
                        },
                        new
                        {
                            RecId = 171,
                            DdoTitle = "Tech",
                            DdoType = "Rehearsal"
                        },
                        new
                        {
                            RecId = 172,
                            DdoTitle = "Dress Run",
                            DdoType = "Rehearsal"
                        },
                        new
                        {
                            RecId = 173,
                            DdoTitle = "Blocking",
                            DdoType = "Rehearsal"
                        },
                        new
                        {
                            RecId = 174,
                            DdoTitle = "Choreography",
                            DdoType = "Rehearsal"
                        },
                        new
                        {
                            RecId = 175,
                            DdoTitle = "Table Read",
                            DdoType = "Rehearsal"
                        },
                        new
                        {
                            RecId = 176,
                            DdoTitle = "Spacing",
                            DdoType = "Rehearsal"
                        },
                        new
                        {
                            RecId = 177,
                            DdoTitle = "Week",
                            DdoType = "Route"
                        },
                        new
                        {
                            RecId = 178,
                            DdoTitle = "Split-Week",
                            DdoType = "Route"
                        },
                        new
                        {
                            RecId = 179,
                            DdoTitle = "One-Off",
                            DdoType = "Route"
                        },
                        new
                        {
                            RecId = 180,
                            DdoTitle = "Flight",
                            DdoType = "Travel"
                        },
                        new
                        {
                            RecId = 181,
                            DdoTitle = "Bus",
                            DdoType = "Travel"
                        },
                        new
                        {
                            RecId = 182,
                            DdoTitle = "Train",
                            DdoType = "Travel"
                        },
                        new
                        {
                            RecId = 183,
                            DdoTitle = "Boat",
                            DdoType = "Travel"
                        },
                        new
                        {
                            RecId = 184,
                            DdoTitle = "Car",
                            DdoType = "Travel"
                        },
                        new
                        {
                            RecId = 185,
                            DdoTitle = "Production",
                            DdoType = "Meeting"
                        },
                        new
                        {
                            RecId = 186,
                            DdoTitle = "Load-out",
                            DdoType = "Meeting"
                        },
                        new
                        {
                            RecId = 187,
                            DdoTitle = "Load-in",
                            DdoType = "Meeting"
                        },
                        new
                        {
                            RecId = 188,
                            DdoTitle = "Meet and Greet",
                            DdoType = "Meeting"
                        },
                        new
                        {
                            RecId = 189,
                            DdoTitle = "Equity",
                            DdoType = "Meeting"
                        });
                });

            modelBuilder.Entity("BlazorStudioManager.Shared.IdentityModels.GridSave", b =>
                {
                    b.Property<int>("RecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AspUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GridAllSettings")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("GridState")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("LastModifiedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOnDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("StoreName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Updated")
                        .HasColumnType("bit");

                    b.HasKey("RecId");

                    b.ToTable("GridSaves");
                });

            modelBuilder.Entity("BlazorStudioManager.Shared.IdentityModels.Message", b =>
                {
                    b.Property<int>("RecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedByContactRecId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CueFromWasIn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CueToWasIn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSent")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int?>("DisciplineId")
                        .HasColumnType("int");

                    b.Property<int>("EditIndex")
                        .HasColumnType("int");

                    b.Property<bool>("FromArchive")
                        .HasColumnType("bit");

                    b.Property<string>("FromCompanyMemeberTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FromContactRecId")
                        .HasColumnType("int");

                    b.Property<bool>("FromFlag")
                        .HasColumnType("bit");

                    b.Property<string>("FromName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasBeenRead")
                        .HasColumnType("bit");

                    b.Property<bool>("Hidden")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOnDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("MessageBody")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MessageSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MessageTypeRecId")
                        .HasColumnType("int");

                    b.Property<string>("MessagesImageFriendlyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MessagesImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MessagesPdfFriendlyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MessagesPdfUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoteTypeString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReplyId")
                        .HasColumnType("int");

                    b.Property<string>("RunningOrderWasIn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SectionElapsedTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShowClock")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShowSection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudioManagerUserFromId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudioManagerUserToId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ToArchive")
                        .HasColumnType("bit");

                    b.Property<string>("ToCompanyMemeberTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ToContactRecId")
                        .HasColumnType("int");

                    b.Property<bool>("ToFlag")
                        .HasColumnType("bit");

                    b.Property<string>("ToName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.HasKey("RecId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("BlazorStudioManager.Shared.IdentityModels.NotificationMessage", b =>
                {
                    b.Property<int>("RecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Archive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("EditIndex")
                        .HasColumnType("int");

                    b.Property<bool>("HasBeenRead")
                        .HasColumnType("bit");

                    b.Property<bool>("Hidden")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOnDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("MessageType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotificationUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReportId")
                        .HasColumnType("int");

                    b.Property<string>("SendMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SendToEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudioManagerUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecId");

                    b.HasIndex("StudioManagerUserId");

                    b.ToTable("NotificationMessages");
                });

            modelBuilder.Entity("BlazorStudioManager.Shared.IdentityModels.PageHelper", b =>
                {
                    b.Property<int>("RecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("EditIndex")
                        .HasColumnType("int");

                    b.Property<int>("GridVersion")
                        .HasColumnType("int");

                    b.Property<bool>("Hidden")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOnDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LoadType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PageHelp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PageTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PageType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<string>("VideoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WidgetId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecId");

                    b.ToTable("PageHelpers");
                });

            modelBuilder.Entity("BlazorStudioManager.Shared.IdentityModels.PromoCode", b =>
                {
                    b.Property<int>("RecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodeUses")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("EditIndex")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Hidden")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOnDt")
                        .HasColumnType("datetime2");

                    b.Property<int>("OwnerContactRecId")
                        .HasColumnType("int");

                    b.Property<int>("PercentDiscount")
                        .HasColumnType("int");

                    b.Property<string>("PromoCodeString")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubscriptionRoleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.HasKey("RecId")
                        .HasName("PK_PromoCode");

                    b.ToTable("PromoCodes");
                });

            modelBuilder.Entity("BlazorStudioManager.Shared.IdentityModels.PromoCodesUsed", b =>
                {
                    b.Property<int>("RecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUsed")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("EditIndex")
                        .HasColumnType("int");

                    b.Property<bool>("Hidden")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOnDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PromoCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudioManagerUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.HasKey("RecId")
                        .HasName("PK_PromoCodeUsed");

                    b.ToTable("PromoCodesUsed");
                });

            modelBuilder.Entity("BlazorStudioManager.Shared.IdentityModels.Purchase", b =>
                {
                    b.Property<int>("RecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("EditIndex")
                        .HasColumnType("int");

                    b.Property<bool>("Hidden")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOnDt")
                        .HasColumnType("datetime2");

                    b.Property<int>("OwnerContactRecId")
                        .HasColumnType("int");

                    b.Property<string>("PromoCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("PurchasePrice")
                        .HasColumnType("money");

                    b.Property<string>("PurchaserEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubscriptionRoleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<string>("UpgradeRenewalGift")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecId");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("BlazorStudioManager.Shared.IdentityModels.ReportDefinition", b =>
                {
                    b.Property<int>("RecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("EditIndex")
                        .HasColumnType("int");

                    b.Property<bool>("Hidden")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOnDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReportName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ReportTemplate")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ReportType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudioManagerUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.HasKey("RecId");

                    b.ToTable("ReportDefinitions");
                });

            modelBuilder.Entity("BlazorStudioManager.Shared.IdentityModels.ReportTemplate", b =>
                {
                    b.Property<int>("RecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("EditIndex")
                        .HasColumnType("int");

                    b.Property<bool?>("GlobalLayout")
                        .HasColumnType("bit");

                    b.Property<bool>("Hidden")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOnDt")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Layout")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool?>("Locked")
                        .HasColumnType("bit");

                    b.Property<string>("ModelType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportTemplateName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.HasKey("RecId");

                    b.ToTable("ReportTemplates");
                });

            modelBuilder.Entity("BlazorStudioManager.Shared.IdentityModels.ScheduleResource", b =>
                {
                    b.Property<int>("RecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColorHashTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecId");

                    b.ToTable("ScheduleResources");
                });

            modelBuilder.Entity("BlazorStudioManager.Shared.IdentityModels.ShareLevel", b =>
                {
                    b.Property<int>("RecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("EditIndex")
                        .HasColumnType("int");

                    b.Property<bool>("Hidden")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOnDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ShareLevelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SizeAllotment")
                        .HasColumnType("bigint");

                    b.Property<string>("SizeFriendlyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudioManagerNetRoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.HasKey("RecId");

                    b.HasIndex("StudioManagerNetRoleId");

                    b.ToTable("ShareLevels");

                    b.HasData(
                        new
                        {
                            RecId = 1,
                            CreatedOn = new DateTime(2021, 7, 28, 13, 42, 49, 480, DateTimeKind.Utc).AddTicks(1186),
                            Deleted = false,
                            EditIndex = 0,
                            Hidden = false,
                            LastModifiedOnDt = new DateTime(2021, 7, 28, 13, 42, 49, 480, DateTimeKind.Utc).AddTicks(1183),
                            RoleId = "showplatinum",
                            ShareLevelName = "Full Access",
                            SizeAllotment = 2000000L,
                            SizeFriendlyName = "2TB",
                            Updated = true
                        },
                        new
                        {
                            RecId = 2,
                            CreatedOn = new DateTime(2021, 7, 28, 13, 42, 49, 480, DateTimeKind.Utc).AddTicks(2546),
                            Deleted = false,
                            EditIndex = 0,
                            Hidden = false,
                            LastModifiedOnDt = new DateTime(2021, 7, 28, 13, 42, 49, 480, DateTimeKind.Utc).AddTicks(2544),
                            RoleId = "showtitanium",
                            ShareLevelName = "Checklist, View, Print, and Edit",
                            SizeAllotment = 1000000L,
                            SizeFriendlyName = "1TB",
                            Updated = true
                        },
                        new
                        {
                            RecId = 3,
                            CreatedOn = new DateTime(2021, 7, 28, 13, 42, 49, 480, DateTimeKind.Utc).AddTicks(2549),
                            Deleted = false,
                            EditIndex = 0,
                            Hidden = false,
                            LastModifiedOnDt = new DateTime(2021, 7, 28, 13, 42, 49, 480, DateTimeKind.Utc).AddTicks(2549),
                            RoleId = "showgold",
                            ShareLevelName = "Checklist, View, and Print",
                            SizeAllotment = 1000L,
                            SizeFriendlyName = "1Gig",
                            Updated = true
                        },
                        new
                        {
                            RecId = 4,
                            CreatedOn = new DateTime(2021, 7, 28, 13, 42, 49, 480, DateTimeKind.Utc).AddTicks(2551),
                            Deleted = false,
                            EditIndex = 0,
                            Hidden = false,
                            LastModifiedOnDt = new DateTime(2021, 7, 28, 13, 42, 49, 480, DateTimeKind.Utc).AddTicks(2550),
                            RoleId = "showsilver",
                            ShareLevelName = "Checklist, and View",
                            SizeAllotment = 500L,
                            SizeFriendlyName = "500MB",
                            Updated = true
                        },
                        new
                        {
                            RecId = 5,
                            CreatedOn = new DateTime(2021, 7, 28, 13, 42, 49, 480, DateTimeKind.Utc).AddTicks(2553),
                            Deleted = false,
                            EditIndex = 0,
                            Hidden = false,
                            LastModifiedOnDt = new DateTime(2021, 7, 28, 13, 42, 49, 480, DateTimeKind.Utc).AddTicks(2552),
                            RoleId = "showbronze",
                            ShareLevelName = "Checklist",
                            SizeAllotment = 0L,
                            SizeFriendlyName = "None",
                            Updated = true
                        },
                        new
                        {
                            RecId = 6,
                            CreatedOn = new DateTime(2021, 7, 28, 13, 42, 49, 480, DateTimeKind.Utc).AddTicks(2554),
                            Deleted = false,
                            EditIndex = 0,
                            Hidden = false,
                            LastModifiedOnDt = new DateTime(2021, 7, 28, 13, 42, 49, 480, DateTimeKind.Utc).AddTicks(2554),
                            RoleId = "showguest",
                            ShareLevelName = "No Access",
                            SizeAllotment = 0L,
                            SizeFriendlyName = "None",
                            Updated = true
                        });
                });

            modelBuilder.Entity("BlazorStudioManager.Shared.IdentityModels.ShareLink", b =>
                {
                    b.Property<int>("RecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("EditIndex")
                        .HasColumnType("int");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileTypes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Hidden")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOnDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameOfProduction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OwnerContactRecId")
                        .HasColumnType("int");

                    b.Property<int>("ProductionId")
                        .HasColumnType("int");

                    b.Property<string>("ShareLinkUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShareName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StudioManagerUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<string>("UrlId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecId");

                    b.HasIndex("StudioManagerUserId");

                    b.ToTable("ShareLinks");
                });

            modelBuilder.Entity("BlazorStudioManager.Shared.IdentityModels.ShareLinkFile", b =>
                {
                    b.Property<int>("RecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("EditIndex")
                        .HasColumnType("int");

                    b.Property<int>("FileId")
                        .HasColumnType("int");

                    b.Property<bool>("Hidden")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOnDt")
                        .HasColumnType("datetime2");

                    b.Property<int>("LinkId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.HasKey("RecId");

                    b.HasIndex("LinkId");

                    b.ToTable("ShareLinkFiles");
                });

            modelBuilder.Entity("BlazorStudioManager.Shared.IdentityModels.ShareMessage", b =>
                {
                    b.Property<int>("RecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Archived")
                        .HasColumnType("bit");

                    b.Property<bool>("HasBeenRead")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOnDt")
                        .HasColumnType("datetime2");

                    b.Property<int>("LinkId")
                        .HasColumnType("int");

                    b.Property<string>("MessageFromUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MessageLinkId")
                        .HasColumnType("int");

                    b.Property<int>("MessageTypeId")
                        .HasColumnType("int");

                    b.Property<bool?>("Updated")
                        .HasColumnType("bit");

                    b.HasKey("RecId");

                    b.HasIndex("LinkId");

                    b.ToTable("ShareMessages");
                });

            modelBuilder.Entity("BlazorStudioManager.Shared.IdentityModels.ShareMessageReply", b =>
                {
                    b.Property<int>("RecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOnDt")
                        .HasColumnType("datetime2");

                    b.Property<int>("LinkId")
                        .HasColumnType("int");

                    b.Property<string>("ReplyFromUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReplySubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReplyText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReplyToUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Updated")
                        .HasColumnType("bit");

                    b.HasKey("RecId");

                    b.HasIndex("LinkId");

                    b.ToTable("ShareMessageReplies");
                });

            modelBuilder.Entity("BlazorStudioManager.Shared.IdentityModels.SharedProduction", b =>
                {
                    b.Property<int>("RecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AllowMerge")
                        .HasColumnType("bit");

                    b.Property<bool>("Archive")
                        .HasColumnType("bit");

                    b.Property<int?>("CompanyMemberId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Hidden")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProductionCreator")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastLoggedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastMergedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOnDt")
                        .HasColumnType("datetime2");

                    b.Property<int>("OwnerContactId")
                        .HasColumnType("int");

                    b.Property<string>("OwnerUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductionId")
                        .HasColumnType("int");

                    b.Property<int>("ShareLevelId")
                        .HasColumnType("int");

                    b.Property<int>("ShareWithContactId")
                        .HasColumnType("int");

                    b.Property<string>("SharedWithEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SharedWithUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Updated")
                        .HasColumnType("bit");

                    b.Property<bool>("UserHasConnected")
                        .HasColumnType("bit");

                    b.HasKey("RecId");

                    b.ToTable("SharedProductions");
                });

            modelBuilder.Entity("BlazorStudioManager.Shared.IdentityModels.StudioManagerNetRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Feature1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Feature2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Feature3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Feature4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Feature5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Feature6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Feature7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("PublicRole")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowRole")
                        .HasColumnType("bit");

                    b.Property<string>("ShowRoleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubscriptionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpgradeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("YearlyCost")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "guest",
                            ConcurrencyStamp = "68b943d4-2bac-4e7c-a9e9-a4b074cd3b9e",
                            Feature1 = "View shared productions",
                            Feature2 = "Unlimited collaborators",
                            Feature3 = "Online Scheduling",
                            Feature4 = "Customizable Reports",
                            Feature5 = "Online Cast Check-in",
                            Feature6 = "No Online Storage",
                            Feature7 = " per year",
                            Name = "Guest",
                            NormalizedName = "GUEST",
                            PublicRole = false,
                            ShowRole = false,
                            ShowRoleId = "showguest",
                            SubscriptionDescription = "No Rights",
                            YearlyCost = 0m
                        },
                        new
                        {
                            Id = "bronze",
                            ConcurrencyStamp = "1e2b0382-7d19-4c2c-997b-31dcf20f4ec8",
                            Feature1 = "View shared productions",
                            Feature2 = "Mark Check List information",
                            Feature3 = "Online Scheduling",
                            Feature4 = "Online performance reports",
                            Feature5 = "Online Cast Check-in",
                            Feature6 = "No Online Storage",
                            Feature7 = " per year",
                            Name = "Bronze",
                            NormalizedName = "BRONZE",
                            PublicRole = true,
                            ShowRole = false,
                            ShowRoleId = "showbronze",
                            SubscriptionDescription = "Viewing and Check List Only",
                            YearlyCost = 0m
                        },
                        new
                        {
                            Id = "gold",
                            ConcurrencyStamp = "4ef6f074-a157-476b-bffa-35b3b4f994d8",
                            Feature1 = "Unlimited productions",
                            Feature2 = "Unlimited collaborators",
                            Feature3 = "Online Scheduling",
                            Feature4 = "Customizable Reports",
                            Feature5 = "Online Cast Check-in",
                            Feature6 = "1 Terabyte Online Storage",
                            Feature7 = " per year",
                            Name = "Gold",
                            NormalizedName = "GOLD",
                            PublicRole = true,
                            ShowRole = false,
                            ShowRoleId = "showgold",
                            SubscriptionDescription = "Full Rights and 1GB of storage",
                            YearlyCost = 200m
                        },
                        new
                        {
                            Id = "silver",
                            ConcurrencyStamp = "32ff349f-30c9-4eea-98e3-0620bfc335f4",
                            Feature1 = "Unlimited productions",
                            Feature2 = "Unlimited collaborators",
                            Feature3 = "Online Scheduling",
                            Feature4 = "Customizable Reports",
                            Feature5 = "Online Cast Check-in",
                            Feature6 = "1 Gigabyte Online Storage",
                            Feature7 = " per year",
                            Name = "Silver",
                            NormalizedName = "SILVER",
                            PublicRole = true,
                            ShowRole = false,
                            ShowRoleId = "showsilver",
                            SubscriptionDescription = "Full Rights and 500MB of storage",
                            YearlyCost = 100m
                        },
                        new
                        {
                            Id = "platinum",
                            ConcurrencyStamp = "7218691f-6265-459e-a2ac-131cd546c6fa",
                            Feature1 = "Unlimited productions",
                            Feature2 = "Unlimited collaborators",
                            Feature3 = "Online Scheduling",
                            Feature4 = "Customizable Reports",
                            Feature5 = "Online Cast Check-in",
                            Feature6 = "5 Terabytes Online Storage",
                            Feature7 = " per year",
                            Name = "Platinum",
                            NormalizedName = "PLATINUM",
                            PublicRole = true,
                            ShowRole = false,
                            ShowRoleId = "showplatinum",
                            SubscriptionDescription = "Full Rights and 2TB of storage",
                            YearlyCost = 400m
                        },
                        new
                        {
                            Id = "titanium",
                            ConcurrencyStamp = "7a92edd3-c830-4fd5-8ad3-5385dcb9030d",
                            Feature1 = "Unlimited productions",
                            Feature2 = "Unlimited collaborators",
                            Feature3 = "Online Scheduling",
                            Feature4 = "Customizable Reports",
                            Feature5 = "Online Cast Check-in",
                            Feature6 = "2 Terabytes Online Storage",
                            Feature7 = " per year",
                            Name = "Titanium",
                            NormalizedName = "TITANIUM",
                            PublicRole = true,
                            ShowRole = false,
                            ShowRoleId = "showtitanium",
                            SubscriptionDescription = "Full Rights and 1TB of storage",
                            YearlyCost = 300m
                        },
                        new
                        {
                            Id = "showguest",
                            ConcurrencyStamp = "7818ce60-0dcc-4790-8998-edc7567c94c3",
                            Name = "ShowGuest",
                            NormalizedName = "SHOWGUEST",
                            PublicRole = false,
                            ShowRole = true,
                            SubscriptionDescription = "",
                            YearlyCost = 0m
                        },
                        new
                        {
                            Id = "showbronze",
                            ConcurrencyStamp = "c8cf181f-7ddf-4e2c-a8ef-1b3375ea7c76",
                            Name = "ShowBronze",
                            NormalizedName = "SHOWBRONZE",
                            PublicRole = false,
                            ShowRole = true,
                            SubscriptionDescription = "",
                            YearlyCost = 0m
                        },
                        new
                        {
                            Id = "showsilver",
                            ConcurrencyStamp = "4e1dca3e-ce9e-48ca-a42b-53707274a6fa",
                            Name = "ShowSilver",
                            NormalizedName = "SHOWSILVER",
                            PublicRole = false,
                            ShowRole = true,
                            SubscriptionDescription = "",
                            YearlyCost = 0m
                        },
                        new
                        {
                            Id = "showgold",
                            ConcurrencyStamp = "10f2b008-0337-48f6-9de3-5703d9c90da2",
                            Name = "ShowGold",
                            NormalizedName = "SHOWGOLD",
                            PublicRole = false,
                            ShowRole = true,
                            SubscriptionDescription = "",
                            YearlyCost = 0m
                        },
                        new
                        {
                            Id = "showplatinum",
                            ConcurrencyStamp = "e718e736-81bc-4743-8439-cf5f22af9b80",
                            Name = "ShowPlatinum",
                            NormalizedName = "SHOWPLATINUM",
                            PublicRole = false,
                            ShowRole = true,
                            SubscriptionDescription = "",
                            YearlyCost = 0m
                        },
                        new
                        {
                            Id = "showtitanium",
                            ConcurrencyStamp = "1254a113-748d-43e6-83ca-8eaa39933207",
                            Name = "ShowTitanium",
                            NormalizedName = "SHOWTITANIUM",
                            PublicRole = false,
                            ShowRole = true,
                            SubscriptionDescription = "",
                            YearlyCost = 0m
                        },
                        new
                        {
                            Id = "administrator",
                            ConcurrencyStamp = "d4b6753e-1061-4efa-89dd-7e438922fb72",
                            Name = "Administrator",
                            NormalizedName = "ADMINISTRATOR",
                            PublicRole = false,
                            ShowRole = false,
                            ShowRoleId = "showplatinum",
                            SubscriptionDescription = "Greetings Professor Falken",
                            YearlyCost = 0m
                        });
                });

            modelBuilder.Entity("BlazorStudioManager.Shared.IdentityModels.StudioManagerUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Auth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContactId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerSupportPoints")
                        .HasColumnType("int");

                    b.Property<string>("DatabaseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DisciplineId")
                        .HasColumnType("int");

                    b.Property<int>("DiscountPoints")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("FreeTrialEnded")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCustomerSupport")
                        .HasColumnType("bit");

                    b.Property<bool>("KeepInfoPrivate")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("P256dh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProductionAspUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductionDisciplineId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductionId")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SharedProductionId")
                        .HasColumnType("int");

                    b.Property<bool>("ShowNewFeatures")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowNewUser")
                        .HasColumnType("bit");

                    b.Property<int?>("ThemeId")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("DisciplineId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("SharedProductionId")
                        .IsUnique()
                        .HasFilter("[SharedProductionId] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("BlazorStudioManager.Shared.IdentityModels.StudioManagerUserRole", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("SubscriptionEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubscriptionRoleId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("BlazorStudioManager.Shared.IdentityModels.Theme", b =>
                {
                    b.Property<int>("RecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("EditIndex")
                        .HasColumnType("int");

                    b.Property<bool>("Hidden")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOnDt")
                        .HasColumnType("datetime2");

                    b.Property<int>("OwnerContactRecId")
                        .HasColumnType("int");

                    b.Property<string>("ThemeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThemeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThemeShade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThemeUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<bool>("isDark")
                        .HasColumnType("bit");

                    b.HasKey("RecId");

                    b.ToTable("Themes");

                    b.HasData(
                        new
                        {
                            RecId = 1,
                            CreatedOn = new DateTime(2021, 7, 28, 13, 42, 49, 480, DateTimeKind.Utc).AddTicks(6195),
                            Deleted = false,
                            EditIndex = 0,
                            Hidden = false,
                            LastModifiedOnDt = new DateTime(2021, 7, 28, 13, 42, 49, 480, DateTimeKind.Utc).AddTicks(6192),
                            OwnerContactRecId = 0,
                            ThemeName = "Metro Black",
                            ThemeShade = "Dark",
                            ThemeUrl = "/themes/metroblack.css",
                            Updated = true,
                            isDark = true
                        },
                        new
                        {
                            RecId = 2,
                            CreatedOn = new DateTime(2021, 7, 28, 13, 42, 49, 480, DateTimeKind.Utc).AddTicks(7848),
                            Deleted = false,
                            EditIndex = 0,
                            Hidden = false,
                            LastModifiedOnDt = new DateTime(2021, 7, 28, 13, 42, 49, 480, DateTimeKind.Utc).AddTicks(7846),
                            OwnerContactRecId = 0,
                            ThemeName = "Flat",
                            ThemeShade = "Medium",
                            ThemeUrl = "/themes/flat.css",
                            Updated = true,
                            isDark = true
                        },
                        new
                        {
                            RecId = 3,
                            CreatedOn = new DateTime(2021, 7, 28, 13, 42, 49, 480, DateTimeKind.Utc).AddTicks(7851),
                            Deleted = false,
                            EditIndex = 0,
                            Hidden = false,
                            LastModifiedOnDt = new DateTime(2021, 7, 28, 13, 42, 49, 480, DateTimeKind.Utc).AddTicks(7850),
                            OwnerContactRecId = 0,
                            ThemeName = "Material",
                            ThemeShade = "Plain",
                            ThemeUrl = "_content/Telerik.UI.for.Blazor/css/kendo-theme-material/all.css",
                            Updated = true,
                            isDark = false
                        },
                        new
                        {
                            RecId = 4,
                            CreatedOn = new DateTime(2021, 7, 28, 13, 42, 49, 480, DateTimeKind.Utc).AddTicks(7852),
                            Deleted = false,
                            EditIndex = 0,
                            Hidden = false,
                            LastModifiedOnDt = new DateTime(2021, 7, 28, 13, 42, 49, 480, DateTimeKind.Utc).AddTicks(7852),
                            OwnerContactRecId = 0,
                            ThemeName = "Default",
                            ThemeShade = "Light",
                            ThemeUrl = "_content/Telerik.UI.for.Blazor/css/kendo-theme-default/all.css",
                            Updated = true,
                            isDark = false
                        },
                        new
                        {
                            RecId = 5,
                            CreatedOn = new DateTime(2021, 7, 28, 13, 42, 49, 480, DateTimeKind.Utc).AddTicks(7855),
                            Deleted = false,
                            EditIndex = 0,
                            Hidden = false,
                            LastModifiedOnDt = new DateTime(2021, 7, 28, 13, 42, 49, 480, DateTimeKind.Utc).AddTicks(7854),
                            OwnerContactRecId = 0,
                            ThemeName = "Moonlight",
                            ThemeShade = "Dark",
                            ThemeUrl = "/themes/moonlight.css",
                            Updated = true,
                            isDark = true
                        },
                        new
                        {
                            RecId = 6,
                            CreatedOn = new DateTime(2021, 7, 28, 13, 42, 49, 480, DateTimeKind.Utc).AddTicks(7857),
                            Deleted = false,
                            EditIndex = 0,
                            Hidden = false,
                            LastModifiedOnDt = new DateTime(2021, 7, 28, 13, 42, 49, 480, DateTimeKind.Utc).AddTicks(7856),
                            OwnerContactRecId = 0,
                            ThemeName = "Bootstrap",
                            ThemeShade = "Light",
                            ThemeUrl = "_content/Telerik.UI.for.Blazor/css/kendo-theme-default/all.css",
                            Updated = true,
                            isDark = false
                        },
                        new
                        {
                            RecId = 7,
                            CreatedOn = new DateTime(2021, 7, 28, 13, 42, 49, 480, DateTimeKind.Utc).AddTicks(7858),
                            Deleted = false,
                            EditIndex = 0,
                            Hidden = false,
                            LastModifiedOnDt = new DateTime(2021, 7, 28, 13, 42, 49, 480, DateTimeKind.Utc).AddTicks(7858),
                            OwnerContactRecId = 0,
                            ThemeName = "Urban",
                            ThemeShade = "Light",
                            ThemeUrl = "/themes/Urban.css",
                            Updated = true,
                            isDark = false
                        },
                        new
                        {
                            RecId = 8,
                            CreatedOn = new DateTime(2021, 7, 28, 13, 42, 49, 480, DateTimeKind.Utc).AddTicks(7860),
                            Deleted = false,
                            EditIndex = 0,
                            Hidden = false,
                            LastModifiedOnDt = new DateTime(2021, 7, 28, 13, 42, 49, 480, DateTimeKind.Utc).AddTicks(7859),
                            OwnerContactRecId = 0,
                            ThemeName = "Turquiose",
                            ThemeShade = "Dark",
                            ThemeUrl = "/themes/Turquiose.css",
                            Updated = true,
                            isDark = true
                        },
                        new
                        {
                            RecId = 9,
                            CreatedOn = new DateTime(2021, 7, 28, 13, 42, 49, 480, DateTimeKind.Utc).AddTicks(7896),
                            Deleted = false,
                            EditIndex = 0,
                            Hidden = false,
                            LastModifiedOnDt = new DateTime(2021, 7, 28, 13, 42, 49, 480, DateTimeKind.Utc).AddTicks(7892),
                            OwnerContactRecId = 0,
                            ThemeName = "Vintage",
                            ThemeShade = "Dark",
                            ThemeUrl = "/themes/Vintage.css",
                            Updated = true,
                            isDark = true
                        },
                        new
                        {
                            RecId = 10,
                            CreatedOn = new DateTime(2021, 7, 28, 13, 42, 49, 480, DateTimeKind.Utc).AddTicks(7898),
                            Deleted = false,
                            EditIndex = 0,
                            Hidden = false,
                            LastModifiedOnDt = new DateTime(2021, 7, 28, 13, 42, 49, 480, DateTimeKind.Utc).AddTicks(7897),
                            OwnerContactRecId = 0,
                            ThemeName = "High Contrast",
                            ThemeShade = "Dark",
                            ThemeUrl = "/themes/HighContrast.css",
                            Updated = true,
                            isDark = true
                        },
                        new
                        {
                            RecId = 11,
                            CreatedOn = new DateTime(2021, 7, 28, 13, 42, 49, 480, DateTimeKind.Utc).AddTicks(7899),
                            Deleted = false,
                            EditIndex = 0,
                            Hidden = false,
                            LastModifiedOnDt = new DateTime(2021, 7, 28, 13, 42, 49, 480, DateTimeKind.Utc).AddTicks(7899),
                            OwnerContactRecId = 0,
                            ThemeName = "Indigo",
                            ThemeShade = "Dark",
                            ThemeUrl = "/themes/Indigo.css",
                            Updated = true,
                            isDark = true
                        },
                        new
                        {
                            RecId = 12,
                            CreatedOn = new DateTime(2021, 7, 28, 13, 42, 49, 480, DateTimeKind.Utc).AddTicks(7901),
                            Deleted = false,
                            EditIndex = 0,
                            Hidden = false,
                            LastModifiedOnDt = new DateTime(2021, 7, 28, 13, 42, 49, 480, DateTimeKind.Utc).AddTicks(7900),
                            OwnerContactRecId = 0,
                            ThemeName = "Nordic",
                            ThemeShade = "Dark",
                            ThemeUrl = "/themes/Nordic.css",
                            Updated = true,
                            isDark = true
                        },
                        new
                        {
                            RecId = 13,
                            CreatedOn = new DateTime(2021, 7, 28, 13, 42, 49, 480, DateTimeKind.Utc).AddTicks(7903),
                            Deleted = false,
                            EditIndex = 0,
                            Hidden = false,
                            LastModifiedOnDt = new DateTime(2021, 7, 28, 13, 42, 49, 480, DateTimeKind.Utc).AddTicks(7902),
                            OwnerContactRecId = 0,
                            ThemeName = "Indigo Blue Dark",
                            ThemeShade = "Dark",
                            ThemeUrl = "/themes/IndigoBlueDark.css",
                            Updated = true,
                            isDark = true
                        });
                });

            modelBuilder.Entity("BlazorStudioManager.Shared.IdentityModels.VersionHistory", b =>
                {
                    b.Property<int>("RecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("EditIndex")
                        .HasColumnType("int");

                    b.Property<bool>("Hidden")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCurrent")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOnDt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecId");

                    b.ToTable("VersionHistories");

                    b.HasData(
                        new
                        {
                            RecId = 1,
                            CreatedOn = new DateTime(2021, 7, 28, 13, 42, 49, 475, DateTimeKind.Utc).AddTicks(6690),
                            Deleted = false,
                            EditIndex = 0,
                            Hidden = false,
                            IsCurrent = true,
                            LastModifiedOnDt = new DateTime(2021, 7, 28, 13, 42, 49, 475, DateTimeKind.Utc).AddTicks(6680),
                            Updated = true,
                            Version = "1.040"
                        });
                });

            modelBuilder.Entity("BlazorStudioManager.Shared.IdentityModels.ZipCode", b =>
                {
                    b.Property<int>("RecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("County")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LatitudeSt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LongitudeSt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeZone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecId");

                    b.ToTable("ZipCodes");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityRoleClaim<string>");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("BlazorStudioManager.Shared.IdentityModels.StudioManagerNetRoleClaim", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>");

                    b.HasDiscriminator().HasValue("StudioManagerNetRoleClaim");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClaimType = "Demo",
                            ClaimValue = "Demo",
                            RoleId = "guest"
                        },
                        new
                        {
                            Id = 2,
                            ClaimType = "Demo",
                            ClaimValue = "Demo",
                            RoleId = "showbronze"
                        },
                        new
                        {
                            Id = 3,
                            ClaimType = "Checklist",
                            ClaimValue = "Checklist",
                            RoleId = "showbronze"
                        },
                        new
                        {
                            Id = 4,
                            ClaimType = "Demo",
                            ClaimValue = "Demo",
                            RoleId = "showgold"
                        },
                        new
                        {
                            Id = 5,
                            ClaimType = "Checklist",
                            ClaimValue = "Checklist",
                            RoleId = "showgold"
                        },
                        new
                        {
                            Id = 6,
                            ClaimType = "Viewing",
                            ClaimValue = "Viewing",
                            RoleId = "showgold"
                        },
                        new
                        {
                            Id = 7,
                            ClaimType = "Printing",
                            ClaimValue = "Printing",
                            RoleId = "showgold"
                        },
                        new
                        {
                            Id = 8,
                            ClaimType = "Editing",
                            ClaimValue = "Editing",
                            RoleId = "showgold"
                        },
                        new
                        {
                            Id = 9,
                            ClaimType = "Creating",
                            ClaimValue = "Creating",
                            RoleId = "showgold"
                        },
                        new
                        {
                            Id = 10,
                            ClaimType = "Demo",
                            ClaimValue = "Demo",
                            RoleId = "showsilver"
                        },
                        new
                        {
                            Id = 11,
                            ClaimType = "Checklist",
                            ClaimValue = "Checklist",
                            RoleId = "showsilver"
                        },
                        new
                        {
                            Id = 12,
                            ClaimType = "Viewing",
                            ClaimValue = "Viewing",
                            RoleId = "showsilver"
                        },
                        new
                        {
                            Id = 13,
                            ClaimType = "Printing",
                            ClaimValue = "Printing",
                            RoleId = "showsilver"
                        },
                        new
                        {
                            Id = 14,
                            ClaimType = "Editing",
                            ClaimValue = "Editing",
                            RoleId = "showsilver"
                        },
                        new
                        {
                            Id = 15,
                            ClaimType = "Creating",
                            ClaimValue = "Creating",
                            RoleId = "showsilver"
                        },
                        new
                        {
                            Id = 16,
                            ClaimType = "Demo",
                            ClaimValue = "Demo",
                            RoleId = "showplatinum"
                        },
                        new
                        {
                            Id = 17,
                            ClaimType = "Checklist",
                            ClaimValue = "Checklist",
                            RoleId = "showplatinum"
                        },
                        new
                        {
                            Id = 18,
                            ClaimType = "Viewing",
                            ClaimValue = "Viewing",
                            RoleId = "showplatinum"
                        },
                        new
                        {
                            Id = 19,
                            ClaimType = "Printing",
                            ClaimValue = "Printing",
                            RoleId = "showplatinum"
                        },
                        new
                        {
                            Id = 20,
                            ClaimType = "Editing",
                            ClaimValue = "Editing",
                            RoleId = "showplatinum"
                        },
                        new
                        {
                            Id = 21,
                            ClaimType = "Creating",
                            ClaimValue = "Creating",
                            RoleId = "showplatinum"
                        },
                        new
                        {
                            Id = 22,
                            ClaimType = "Demo",
                            ClaimValue = "Demo",
                            RoleId = "showtitanium"
                        },
                        new
                        {
                            Id = 23,
                            ClaimType = "Checklist",
                            ClaimValue = "Checklist",
                            RoleId = "showtitanium"
                        },
                        new
                        {
                            Id = 24,
                            ClaimType = "Viewing",
                            ClaimValue = "Viewing",
                            RoleId = "showtitanium"
                        },
                        new
                        {
                            Id = 25,
                            ClaimType = "Printing",
                            ClaimValue = "Printing",
                            RoleId = "showtitanium"
                        },
                        new
                        {
                            Id = 26,
                            ClaimType = "Editing",
                            ClaimValue = "Editing",
                            RoleId = "showtitanium"
                        },
                        new
                        {
                            Id = 27,
                            ClaimType = "Demo",
                            ClaimValue = "Demo",
                            RoleId = "administrator"
                        },
                        new
                        {
                            Id = 28,
                            ClaimType = "Checklist",
                            ClaimValue = "Checklist",
                            RoleId = "administrator"
                        },
                        new
                        {
                            Id = 29,
                            ClaimType = "Viewing",
                            ClaimValue = "Viewing",
                            RoleId = "administrator"
                        },
                        new
                        {
                            Id = 30,
                            ClaimType = "Printing",
                            ClaimValue = "Printing",
                            RoleId = "administrator"
                        },
                        new
                        {
                            Id = 31,
                            ClaimType = "Editing",
                            ClaimValue = "Editing",
                            RoleId = "administrator"
                        },
                        new
                        {
                            Id = 32,
                            ClaimType = "Creating",
                            ClaimValue = "Creating",
                            RoleId = "administrator"
                        },
                        new
                        {
                            Id = 33,
                            ClaimType = "Admin",
                            ClaimValue = "Admin",
                            RoleId = "administrator"
                        });
                });

            modelBuilder.Entity("BlazorStudioManager.Shared.IdentityModels.DisciplineColor", b =>
                {
                    b.HasOne("BlazorStudioManager.Shared.IdentityModels.StudioManagerUser", "StudioManagerUser")
                        .WithMany()
                        .HasForeignKey("StudioManagerUserId");

                    b.Navigation("StudioManagerUser");
                });

            modelBuilder.Entity("BlazorStudioManager.Shared.IdentityModels.NotificationMessage", b =>
                {
                    b.HasOne("BlazorStudioManager.Shared.IdentityModels.StudioManagerUser", "StudioManagerUser")
                        .WithMany()
                        .HasForeignKey("StudioManagerUserId");

                    b.Navigation("StudioManagerUser");
                });

            modelBuilder.Entity("BlazorStudioManager.Shared.IdentityModels.ShareLevel", b =>
                {
                    b.HasOne("BlazorStudioManager.Shared.IdentityModels.StudioManagerNetRole", null)
                        .WithMany("ShareLevels")
                        .HasForeignKey("StudioManagerNetRoleId");
                });

            modelBuilder.Entity("BlazorStudioManager.Shared.IdentityModels.ShareLink", b =>
                {
                    b.HasOne("BlazorStudioManager.Shared.IdentityModels.StudioManagerUser", "StudioManagerUser")
                        .WithMany()
                        .HasForeignKey("StudioManagerUserId");

                    b.Navigation("StudioManagerUser");
                });

            modelBuilder.Entity("BlazorStudioManager.Shared.IdentityModels.ShareLinkFile", b =>
                {
                    b.HasOne("BlazorStudioManager.Shared.IdentityModels.ShareLink", "ShareLink")
                        .WithMany("ShareLinkFiles")
                        .HasForeignKey("LinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShareLink");
                });

            modelBuilder.Entity("BlazorStudioManager.Shared.IdentityModels.ShareMessage", b =>
                {
                    b.HasOne("BlazorStudioManager.Shared.IdentityModels.SharedProduction", "SharedProduction")
                        .WithMany("ShareMessages")
                        .HasForeignKey("LinkId")
                        .HasConstraintName("FK_ShareMessages_ShareMessage")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SharedProduction");
                });

            modelBuilder.Entity("BlazorStudioManager.Shared.IdentityModels.ShareMessageReply", b =>
                {
                    b.HasOne("BlazorStudioManager.Shared.IdentityModels.ShareMessage", "ShareMessage")
                        .WithMany("ShareMessageReplies")
                        .HasForeignKey("LinkId")
                        .HasConstraintName("FK_ShareMessageReply_ShareMessage")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShareMessage");
                });

            modelBuilder.Entity("BlazorStudioManager.Shared.IdentityModels.StudioManagerUser", b =>
                {
                    b.HasOne("BlazorStudioManager.Shared.IdentityModels.Discipline", "Discipline")
                        .WithMany("StudioManagerUsers")
                        .HasForeignKey("DisciplineId")
                        .HasConstraintName("FK_Discipline_StudioManagerUsers");

                    b.HasOne("BlazorStudioManager.Shared.IdentityModels.SharedProduction", null)
                        .WithOne("OwnerStudioManagerUser")
                        .HasForeignKey("BlazorStudioManager.Shared.IdentityModels.StudioManagerUser", "SharedProductionId");

                    b.Navigation("Discipline");
                });

            modelBuilder.Entity("BlazorStudioManager.Shared.IdentityModels.StudioManagerUserRole", b =>
                {
                    b.HasOne("BlazorStudioManager.Shared.IdentityModels.StudioManagerNetRole", "Role")
                        .WithMany("StudioManagerUserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorStudioManager.Shared.IdentityModels.StudioManagerUser", "User")
                        .WithMany("StudioManagerUserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("BlazorStudioManager.Shared.IdentityModels.StudioManagerNetRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("BlazorStudioManager.Shared.IdentityModels.StudioManagerUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("BlazorStudioManager.Shared.IdentityModels.StudioManagerUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("BlazorStudioManager.Shared.IdentityModels.StudioManagerUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BlazorStudioManager.Shared.IdentityModels.Discipline", b =>
                {
                    b.Navigation("StudioManagerUsers");
                });

            modelBuilder.Entity("BlazorStudioManager.Shared.IdentityModels.ShareLink", b =>
                {
                    b.Navigation("ShareLinkFiles");
                });

            modelBuilder.Entity("BlazorStudioManager.Shared.IdentityModels.ShareMessage", b =>
                {
                    b.Navigation("ShareMessageReplies");
                });

            modelBuilder.Entity("BlazorStudioManager.Shared.IdentityModels.SharedProduction", b =>
                {
                    b.Navigation("OwnerStudioManagerUser");

                    b.Navigation("ShareMessages");
                });

            modelBuilder.Entity("BlazorStudioManager.Shared.IdentityModels.StudioManagerNetRole", b =>
                {
                    b.Navigation("ShareLevels");

                    b.Navigation("StudioManagerUserRoles");
                });

            modelBuilder.Entity("BlazorStudioManager.Shared.IdentityModels.StudioManagerUser", b =>
                {
                    b.Navigation("StudioManagerUserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
